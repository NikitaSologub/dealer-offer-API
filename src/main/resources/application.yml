server:
  port: 15073
  servlet.context-path: /dealer-offer-api

minio:
  url: ${MINIO_ROOT_URL:https://localhost:9000/} # для dev - https://storage.yandexcloud.net/
  bucket: ${MINIO_BUCKET:svc-yc-car-search}
  access-key: ${MINIO_ROOT_USER:YCAJEpPp9OIYu7W8v8kkCwlci}
  secret-key: ${MINIO_ROOT_PASSWORD:YCM655s5lED4alDInim6hBpcbmBqOPO7xk-JLVh2}
spring:
#  datasource:
#    driver-class-name: org.postgress.Driver
#    url: jdbc:postgresql://localhost:5432/book_db
#    username: car_search_platform_db_user
#    password: FP8VCNJ8gvU7YzGi
#  jpa:
#    show-sql: true
#    database: postgresql
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    open-in-view: false
#    generate-ddl: true
#    hibernate:
#      ddl-auto: update # When you launch the application for the first time - switch "none" at "create"
  cloud:
    stream:
      rabbit:
        bindings:
          dealer_offer_api:
            producer:
              exchangeType: direct
              routing-key-expression: "'new-offers-list.event.create'"
          c_sharp_exchange:
            consumer:
              exchangeType: direct
              queueNameGroupOnly: true # Использовать для названия очереди только её имя без exchange
              binding-routing-key: "task-status.from.c-sharp.read"
      bindings:
        dealer_offer_api:
          destination: dealer_offer_api
          group: to.stock-service.new-offers-list
          binder: rabbit
        c_sharp_exchange:
          destination: c_sharp_exchange
          group: c-sharp-queue
          binder: rabbit
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                virtual-host: ${RABBIT_VHOST:/}
                port: ${RABBIT_PORT:5672}
                username: ${RABBIT_USERNAME:guest}
                password: ${RABBIT_PASSWORD:guest}
                host: ${RABBIT_HOST:localhost}
                deliveryMode: ${DELIVERY_MODE:2}

#logging:
#  level:
#    ru:
#      alfaleasing: ${LOGGING_LEVEL:INFO}
#      alfaleasing.logging:
#        http: ${LOGGING_LEVEL:INFO}