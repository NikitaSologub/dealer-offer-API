server:
  port: 15073
  servlet.context-path: /dealer-offer-api

minio:
  url: ${MINIO_ROOT_URL:https://localhost:9000/} # для dev - https://storage.yandexcloud.net/
  bucket: ${MINIO_BUCKET:svc-yc-car-search}
  access-key: ${MINIO_ROOT_USER:YCAJEpPp9OIYu7W8v8kkCwlci}
  secret-key: ${MINIO_ROOT_PASSWORD:YCM655s5lED4alDInim6hBpcbmBqOPO7xk-JLVh2}
spring:
  cloud:
    stream:
      rabbit:
        bindings:
          dealer-car-stock:
            producer:
              routingKeyExpression: "'new-offers-list.event.create'"

#            consumer:
#              exchangeType: direct
#              bindingRoutingKey: "new-offers-list.event.create" # Какие из RoutingKey (через запятую) использовать для связывания
#              bindingRoutingKeyDelimiter: ","
#              bindQueue: true
              queueNameGroupOnly: true # Использовать для названия очереди только её имя без exchange
          dealer-car-stock-reading:
            consumer:
              bindingRoutingKey: "new-offers-list.event.create" # Какие из RoutingKey (через запятую) использовать для связывания
              bindingRoutingKeyDelimiter: ","
              bindQueue: true
              queueNameGroupOnly: true # Использовать для названия очереди только её имя без exchange

      bindings:
        dealer-car-stock:
          destination: dealer_offer_api
          group: to.stock-service.new-offers-list
          binder: rabbit
        dealer-car-stock-reading:
          destination: dealer_offer_api.to.stock-service.new-offers-list
          group: to.stock-service.new-offers-list
          binder: rabbit
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                virtual-host: ${RABBIT_VHOST:/}
                port: ${RABBIT_PORT:5672}
                username: ${RABBIT_USERNAME:guest}
                password: ${RABBIT_PASSWORD:guest}
                host: ${RABBIT_HOST:localhost}
                deliveryMode: ${DELIVERY_MODE:2}

#logging:
#  level:
#    ru:
#      alfaleasing: ${LOGGING_LEVEL:INFO}
#      alfaleasing.logging:
#        http: ${LOGGING_LEVEL:INFO}