server:
  port: 15073
  servlet.context-path: /dealer-offer-api

minio:
  url: ${MINIO_ROOT_URL:https://localhost:9000/} # для dev - https://storage.yandexcloud.net/
  bucket: ${MINIO_BUCKET:svc-yc-car-search}
  access-key: ${MINIO_ROOT_USER:YCAJEpPp9OIYu7W8v8kkCwlci}
  secret-key: ${MINIO_ROOT_PASSWORD:YCM655s5lED4alDInim6hBpcbmBqOPO7xk-JLVh2}
spring:
  liquibase:
    default-schema: public
  datasource:
    driver-class-name: ${DRIVER_CLASS_NAME:org.postgresql.Driver}
    url: ${URL:jdbc:postgresql://lkpgdb-comm-test.inner.alfaleasing.ru:5432/car_search_platform_db}
    username: ${USERNAME:car_search_platform_db_user}
    password: ${PASSWORD:FP8VCNJ8gvU7YzGi}
#    url: ${URL:jdbc:postgresql://postgres:5432/habrdb}
#    username: ${USERNAME:habrpguser}
#    password: ${PASSWORD:pgpwd4habr}
  jpa:
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
    hibernate:
      naming-strategy : org.hibernate.cfg.EJB3NamingStrategy
  cloud:
    stream:
      rabbit:
        bindings:
          dealer_offer_api:
            producer:
              exchangeType: direct
              routing-key-expression: "'new-offers-list.event.create'" # new-offers-list.event.create
          c_sharp_exchange:
            consumer:
              exchangeType: direct
              queueNameGroupOnly: true # Использовать для названия очереди только её имя без exchange
              binding-routing-key: "task-status.from.c-sharp.read" # offer-result.event.create
      bindings:
        dealer_offer_api:
          destination: dealer_offer_api # exchange.dealer-offer-api
          group: to.stock-service.new-offers-list # queue.dealer-offer-api.to.offer-agrigation-service.new-offers-list
          binder: rabbit
        c_sharp_exchange:
          destination: c_sharp_exchange # exchange.offer-agrigation-service
          group: c-sharp-queue # offer-agrigation-service.to.dealer-offer-api
          binder: rabbit
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                virtual-host: ${RABBIT_VHOST:/}
                port: ${RABBIT_PORT:5672}
                username: ${RABBIT_USERNAME:guest}
                password: ${RABBIT_PASSWORD:guest}
                host: ${RABBIT_HOST:localhost}
                deliveryMode: ${DELIVERY_MODE:2}

#logging:
#  level:
#    ru:
#      alfaleasing: ${LOGGING_LEVEL:INFO}
#      alfaleasing.logging:
#        http: ${LOGGING_LEVEL:INFO}