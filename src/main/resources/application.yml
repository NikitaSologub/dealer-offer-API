server:
  port: 15073
  servlet.context-path: /dealer-offer-API

client:
  dealer-offer-web-portal:
    url: ${DEALER_OFFER_WEB_PORTAL_URL:http://localhost:15072}/dealer-offer-web-portal/v1/dealer

minio:
  url: ${MINIO_ROOT_URL:https://localhost:9000/} #(by default - https://play.min.io)
  bucket: ${MINIO_BUCKET:retrobucket}
  access-key: ${MINIO_ROOT_USER:Q3AM3UQ867SPQQA43P2F}
  secret-key: ${MINIO_ROOT_PASSWORD:zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG}

spring:
  cloud:
    stream:
      rabbit:
        bindings:
          dealer-car-stock:
            consumer:
              exchangeType: direct
#              autoBindDlq: true # Открывать ли очередь недоставленных сообщений
              queueNameGroupOnly: true # Использовать для названия очереди только её имя без exchange
              bindingRoutingKey: "#" # Какие из RoutingKey (через запятую) использовать для связывания
              bindingRoutingKeyDelimiter: "," # Разделить варианты использования bindingRoutingKey
            producer:
              exchangeType: direct
#              routingKeyExpression: "'presale.sms.event.create'"
      bindings:
        dealer-car-stock:
          destination: dealer-car-stock-exchange
          group: dealer-car-stock-queue
          binder: rabbit
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                virtual-host: ${RABBIT_VHOST:/}
                port: ${RABBIT_PORT:5672}
                username: ${RABBIT_USERNAME:guest}
                password: ${RABBIT_PASSWORD:guest}
                host: ${RABBIT_HOST:localhost}
#                deliveryMode: ${DELIVERY_MODE:2}
#  rabbitmq:
#    host: ${RABBIT_HOST:localhost}

#logging:
#  level:
#    ru:
#      alfaleasing: ${LOGGING_LEVEL:INFO}
#      alfaleasing.logging:
#        http: ${LOGGING_LEVEL:INFO}